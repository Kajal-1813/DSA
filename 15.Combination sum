void find(vector<int>&A,int index,int B,vector<int>current,vector<vector<int>>&ans)
{
     if(B==0)
     {
         ans.push_back(current);
     }
     for(int i=index;i<A.size();i++)
     {
         if(A[i]>B)break;

         current.push_back(A[i]);
         find(A,i,B-A[i],current,ans);
         current.pop_back();
     }
}





vector<vector<int> > Solution::combinationSum(vector<int> &A, int B) {
    sort(A.begin(),A.end());
    A.erase(unique(A.begin(),A.end()),A.end());
    vector<vector<int>>ans;
    find(A,0,B,{},ans);
    return ans;
}
